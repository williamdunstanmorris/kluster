<jittershader name = "myShader">
<description> shader test </description>
<param name = "tex0" type = "int" default = "0" />
<language name = "glsl" version = "1.2">
<bind param = "tex0" program = "vp" />
<program name = "vp" type = "vertex">
<![CDATA[

uniform sampler2D tex0; 

const float PI = 3.14159; 
 const float TWO_PI = PI * 2.0;

varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec3 lightPositions[2];
 varying vec3 lightColors[2];

varying vec3 color;


void main() {
texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
texcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord1);
lightPositions[0] = gl_LightSource[0].position.xyz;
lightPositions[1] = gl_LightSource[1].position.xyz;
lightColors[0] = gl_LightSource[0].diffuse.rgb;
lightColors[1] = gl_LightSource[1].diffuse.rgb;


float noise = texture2D(tex0, texcoord0).x;

vec3 normal = gl_NormalMatrix * gl_Normal; // ex normals

normal = normalize(normal); // normal vector will always be equal to 1

vec3 normalNoise = normal * noise;

vec4 ecVertex = gl_ModelViewMatrix * gl_Vertex;

ecVertex += vec4(normalNoise, 1); //w componenet set to 1


color = vec3(noise);


gl_Position = gl_ProjectionMatrix * ecVertex;
}

]]>
</program>

<program name = "fp" type = "fragment">
<![CDATA[



varying vec2 texcoord0;
varying vec2 texcoord1;

varying vec3 color;

void main() {


gl_FragColor = vec4(color, 1);
}

]]>
</program>

</language>
</jittershader>
       
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
 

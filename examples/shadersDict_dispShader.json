{
	"vertex" : "\nconst float PI = 3.14159; \n const float TWO_PI = PI * 2.0;\n\nvarying vec2 texcoord0;\nvarying vec2 texcoord1;\nvarying vec3 lightPositions[2];\n varying vec3 lightColors[2];\n\nvarying vec3 color;\n\n\nvoid main() {\ntexcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);\ntexcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord1);\nlightPositions[0] = gl_LightSource[0].position.xyz;\nlightPositions[1] = gl_LightSource[1].position.xyz;\nlightColors[0] = gl_LightSource[0].diffuse.rgb;\nlightColors[1] = gl_LightSource[1].diffuse.rgb;\n\n\nfloat noise = texture2D(tex0, texcoord0).x;\n\nvec3 normal = gl_NormalMatrix * gl_Normal; // ex normals\n\nnormal = normalize(normal); // normal vector will always be equal to 1\n\nvec3 normalNoise = normal * noise;\n\nvec4 ecVertex = gl_ModelViewMatrix * gl_Vertex;\n\necVertex += vec4(normalNoise, 1); //w componenet set to 1\n\n\ncolor = vec3(noise);\n\n\ngl_Position = gl_ProjectionMatrix * ecVertex;\n}\n\n",
	"fragment" : "\n\nvarying vec2 texcoord0;\nvarying vec2 texcoord1;\n\nvarying vec3 color;\n\nvoid main() {\n\n\ngl_FragColor = vec4(color, 1);\n}\n\n"
}
